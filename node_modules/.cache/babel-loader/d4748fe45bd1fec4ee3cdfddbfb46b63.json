{"ast":null,"code":"var _jsxFileName = \"/Users/shubhankar.mathur/Documents/Code/personal/iamshubhankar/src/containers/projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, Suspense, lazy } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport { StyleConsumer } from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Projects() {\n  _s();\n  const GithubRepoCard = /*#__PURE__*/lazy(() => import(\"../../components/githubRepoCard/GithubRepoCard\"));\n  const FailedLoading = () => null;\n  const renderLoader = () => /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 30\n  }, this);\n  const [repo, setrepo] = useState([]);\n  const {\n    isDark\n  } = useContext(StyleConsumer);\n  useEffect(() => {\n    getRepoData();\n  }, []);\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`\n          }\n        });\n      }\n    });\n    client.query({\n      query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `\n    }).then(result => {\n      setrepoFunction(result.data.user.pinnedItems.edges);\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n      setrepoFunction(\"Error\");\n      console.log(\"Because of this Error, nothing is shown in place of Projects section. Projects section not configured\");\n    });\n  }\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (!(typeof repo === \"string\" || repo instanceof String)) {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: renderLoader(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        id: \"opensource\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"project-title\",\n          children: \"Open Source Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repo-cards-div-main\",\n          children: repo.map((v, i) => {\n            return /*#__PURE__*/_jsxDEV(GithubRepoCard, {\n              repo: v,\n              isDark: isDark\n            }, v.node.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"More Projects\",\n          className: \"project-button\",\n          href: socialMediaLinks.github,\n          newTab: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(FailedLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Projects, \"w7h9C+mMgCDxw9bJ/KLG4ecHjmY=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Suspense","lazy","ApolloClient","gql","Button","openSource","socialMediaLinks","StyleConsumer","Loading","jsxDEV","_jsxDEV","Projects","_s","GithubRepoCard","FailedLoading","renderLoader","fileName","_jsxFileName","lineNumber","columnNumber","repo","setrepo","isDark","getRepoData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","setrepoFunction","data","user","pinnedItems","edges","console","log","catch","error","array","String","fallback","children","className","id","map","v","i","node","text","href","github","newTab","_c","$RefreshReg$"],"sources":["/Users/shubhankar.mathur/Documents/Code/personal/iamshubhankar/src/containers/projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect, useContext, Suspense, lazy } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport { StyleConsumer } from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nexport default function Projects() {\n  const GithubRepoCard = lazy(() =>\n    import(\"../../components/githubRepoCard/GithubRepoCard\")\n  );\n  const FailedLoading = () => null;\n  const renderLoader = () => <Loading />;\n  const [repo, setrepo] = useState([]);\n  const { isDark } = useContext(StyleConsumer);\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `,\n      })\n      .then((result) => {\n        setrepoFunction(result.data.user.pinnedItems.edges);\n        console.log(result);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setrepoFunction(\"Error\");\n        console.log(\n          \"Because of this Error, nothing is shown in place of Projects section. Projects section not configured\"\n        );\n      });\n  }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (!(typeof repo === \"string\" || repo instanceof String)) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <div className=\"main\" id=\"opensource\">\n          <h1 className=\"project-title\">Open Source Projects</h1>\n          <div className=\"repo-cards-div-main\">\n            {repo.map((v, i) => {\n              return (\n                <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\n              );\n            })}\n          </div>\n          <Button\n            text={\"More Projects\"}\n            className=\"project-button\"\n            href={socialMediaLinks.github}\n            newTab={true}\n          />\n        </div>\n      </Suspense>\n    );\n  } else {\n    return <FailedLoading />;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}